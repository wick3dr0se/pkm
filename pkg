#!/bin/bash

pkg_mgr() { # check if package manager/helper exist
  bin='/usr/bin'
  [[ -d $bin ]] || {
    bin='C:/Program Files'
    [[ -d $bin ]] || bin='/data/data/com.termux/files/usr/bin'
  }

  pkgMgr="$1"
  if [[ $pkgMgr == pacman && -f $bin/yay ]] ; then
    pkgMgr="yay" && :
  else
    [[ -f $bin/$pkgMgr ]]
  fi
}

set_arg() { # set a dictionary of arguments
  declare -gA args
  for arg in $1 ; do
    args[$arg]="$2"
  done
}

h='-? -h --help help'
a='-a add install'
d='-d delete remove uninstall'
i='-i info show'
l='-l list'
la='-la list-all'
q='-q query search look'
u='-u update sync'

# set correlating package manager arguments
if pkg_mgr pacman ; then
  set_arg "$h" '-h'
  set_arg "$a" '-S'
  set_arg "$d" '-Runss'
  set_arg "$i" '-Si'
  set_arg "$l" '-Qe --color=auto'
  set_arg "$la" '-Q --color=auto'
  set_arg "$s" '-Ss --color=auto'
  set_arg "$u" '-Syu'
elif pkg_mgr apt ; then
  set_arg "$h" '-h'
  set_arg "$a" 'install'
  set_arg "$d" 'purge'
  set_arg "$i" 'show'
  set_arg "$l" 'list --installed'
  set_arg "$la" 'list'
  set_arg "$s" 'search'
  set_arg "$u" 'update
    -y full-upgrade
    -y autoremove'
elif pkg_mgr rpm ; then
  set_arg "$h" '--help'
  set_arg "$a" '-ih'
  set_arg "$d" '-eh'
  set_arg "$i" '-qi'
  set_arg "$l" '-qa'
  set_arg "$s" '-q'
  set_arg "$u" '-Uh'
elif pkg_mgr winget ; then
  set_arg "$h" '-?'
  set_arg "$a" 'install'
  set_arg "$d" 'uninstall'
  set_arg "$i" 'show'
  set_arg "$l" 'list --name'
  set_arg "$s" 'search -q --name'
  set_arg "$u" 'upgrade --all'
elif pkg_mgr brew ; then
  set_arg "$h" 'help'
  set_arg "$a" 'install'
  set_arg "$d" 'uninstall'
  set_arg "$i" 'info'
  set_arg "$l" 'list'
  set_arg "$s" 'search'
  set_arg "$u" 'upgrade'
fi


# run each argument with package manager
while IFS=$'\n' read -r arg ; do
  $pkgMgr $arg ${@/$1}
done <<< ${args[${1:-sync}]}
